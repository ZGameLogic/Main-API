name: Docker Image CI

on:
  push:
    branches: [ "master" ]
jobs:
  disable-monitor:
    runs-on: ubuntu-latest
    steps:
      - name: disable monitor
        uses: zgamelogic/data-otter-monitor-active@v1.0.0
        with:
          monitorId: 1
          active: false
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: disable-monitor
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: build project
        run: mvn clean install
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag tsa:$(date +%s)
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  Kubernetes:
    runs-on: PiServer
    needs: [ build ]
    steps:
      - name: Checkout Kubernetes Directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'kubernetes/'
      - name: Apply Kubernetes Configuration
        run: sudo kubectl apply -f kubernetes/
      - name: Rolling update
        run: sudo kubectl rollout restart deployment main-api
  enable-monitor:
    runs-on: ubuntu-latest
    needs: [ Kubernetes, build ]
    steps:
      - name: enable monitor
        if: always()
        uses: zgamelogic/data-otter-monitor-active@v1.0.0
        with:
          monitorId: 1
          active: true